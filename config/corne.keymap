/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LWR     1
#define RAS     2
#define ADJ     3

#define AG(keycode) &ag LG(keycode) keycode     // AutoGUI Macro

#define MEH     &kp LC(LS(LALT))
#define HYPER   &kp LC(LS(LA(LGUI)))

&mt { tapping-term-ms = <250>; };

/ {
    behaviors {
        tdques: tap_dance_ques {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&htslash 0 SLASH>, <&kp QUESTION>, <&wth>;
        };

        tdquote: tap_dance_quote {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp SQT>, <&kp DQT>;
        };

        tdcolon: tap_dance_colon {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp SEMI>, <&kp COLON>;
        };

        htcopy: htcopy {
            compatible = "zmk,behavior-hold-tap";
            label = "HTCOPY";
            bindings = <&copy_all>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        htpaste: htpaste {
            compatible = "zmk,behavior-hold-tap";
            label = "HTPASTE";
            bindings = <&paste_all>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };

        tdleft: tdleft {
            compatible = "zmk,behavior-tap-dance";
            label = "TDLEFT";
            #binding-cells = <0>;
            bindings = <&mt LC(LEFT) LEFT>, <&mt LG(LEFT_BRACKET) LEFT>;

            tapping-term-ms = <250>;
        };

        ag_ht: ag_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "AG_HT";
            bindings = <&gui>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        coffee: coffee {
            compatible = "zmk,behavior-hold-tap";
            label = "COFFEE";
            bindings = <&gotosleep>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
        };

        tdright: tdright {
            compatible = "zmk,behavior-tap-dance";
            label = "TDRIGHT";
            #binding-cells = <0>;
            bindings = <&mt LC(RIGHT) RIGHT>, <&mt LG(RIGHT_BRACKET) RIGHT>;

            tapping-term-ms = <250>;
        };

        tdup: tdup {
            compatible = "zmk,behavior-tap-dance";
            label = "TDUP";
            #binding-cells = <0>;
            bindings = <&mt PG_UP UP_ARROW>, <&mt HOME UP_ARROW>;

            tapping-term-ms = <250>;
        };

        tddown: tddown {
            compatible = "zmk,behavior-tap-dance";
            label = "TDDOWN";
            #binding-cells = <0>;
            bindings = <&mt PG_DN DOWN>, <&mt END DOWN>;

            tapping-term-ms = <250>;
        };

        htques: htques {
            compatible = "zmk,behavior-hold-tap";
            label = "HTQUES";
            bindings = <&wth>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        htdots: htdots {
            compatible = "zmk,behavior-hold-tap";
            label = "HTDOTS";
            bindings = <&ellipsis>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        htcolon: htcolon {
            compatible = "zmk,behavior-hold-tap";
            label = "HTCOLON";
            bindings = <&dashdash>, <&tdcolon>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        htquote: htquote {
            compatible = "zmk,behavior-hold-tap";
            label = "HTQUOTE";
            bindings = <&sk>, <&tdquote>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        hyper: hyper {
            compatible = "zmk,behavior-hold-tap";
            label = "HYPER";
            bindings = <&chaos>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        meh: meh {
            compatible = "zmk,behavior-hold-tap";
            label = "MEH";
            bindings = <&blah>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        htslash: htslash {
            compatible = "zmk,behavior-hold-tap";
            label = "HTSLASH";
            bindings = <&interrobang>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };
    };
};

/ {
    macros {
        copy_all: copy_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LG(A)>,
                <&macro_wait_time 50>,
                <&macro_tap>,
                <&kp LG(C)>,
                <&macro_release>;

            label = "COPY_ALL";
        };

        paste_all: paste_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LG(A)>,
                <&macro_wait_time 50>,
                <&macro_tap>,
                <&kp LG(V)>,
                <&macro_release>;

            label = "PASTE_ALL";
        };

        ag: ag {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &ag_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &ag_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AG";
        };

        gui: cmg {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LGUI>;

            label = "CMG";
        };

        gotosleep: gotosleep {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp C_POWER>, <&macro_release>;

            label = "GOTOSLEEP";
        };

        interrobang: interrobang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp QUESTION &kp EXCLAMATION>,
                <&macro_release>;

            label = "interrobang";
        };

        ellipsis: ellipsis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp PERIOD &kp PERIOD &kp PERIOD>,
                <&macro_release>;

            label = "ELLIPSIS";
        };

        dashdash: dashdash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp MINUS &kp MINUS>, <&macro_release>;

            label = "DASHDASH";
        };

        chaos: chaos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LA(LG(LC(LEFT_SHIFT)))>,
                <&macro_release>;

            label = "CHAOS";
        };

        blah: blah {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(LEFT_SHIFT))>, <&macro_release>;

            label = "BLAH";
        };

        wth: wth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp QUESTION &kp QUESTION &kp QUESTION>,
                <&macro_release>;

            label = "WTH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&mt LEFT_ALT ESCAPE  &mt C_AL_COFFEE Q  &ag W  &kp E     &ag R            &ag T                   &ag Y        &kp U                            &ag I         &ag O          &ag P                &tog 1
&meh 0 TAB           &ag A              &ag S  &ag D     &ag F            &htpaste 0 G            &kp H        &kp J                            &kp K         &kp L          &htquote LEFT_ALT 0  &htcolon 0 0
&mt LCTRL LC(TAB)    &ag Z              &ag X  &ag C     &ag V            &htcopy 0 B             &ag N        &kp M                            &kp COMMA     &htdots 0 DOT  &tdques              &tog 3
                                               &kp LGUI  &lt 2 BACKSPACE  &mt LEFT_SHIFT ENTER    &lt 1 SPACE  &mt LG(BACKSPACE) LA(BACKSPACE)  &hyper 0 ESC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans  &kp N1        &kp N2  &kp N3        &kp N4    &kp N5       &kp N6    &kp N7             &kp N8      &kp N9      &kp N0      &tog 1
&trans  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp PLUS  &kp MINUS    &kp HOME  &kp LEFT_BRACKET   &kp MINUS   &none       &kp PLUS    &kp BACKSLASH
&trans  &kp N7        &kp N8  &kp N9        &kp N0    &trans       &kp END   &kp RIGHT_BRACKET  &kp C_PREV  &kp PERIOD  &kp C_NEXT  &none
                              &trans        &trans    &trans       &trans    &kp EQUAL          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&bootloader  &kp EXCL      &kp AT                &kp HASH    &kp LA(NUMBER_3)  &kp PRCNT        &kp CARET  &kp AMPS  &kp ASTERISK   &kp LPAR           &kp RPAR      &none
&trans       &none         &kp LS(LA(NUMBER_2))  &kp DOLLAR  &none             &none            &none      &trans    &kp MINUS      &kp C_VOLUME_UP    &kp PLUS      &kp BACKSLASH
&trans       &kp CAPSLOCK  &none                 &none       &none             &none            &none      &trans    &kp LG(MINUS)  &kp C_VOLUME_DOWN  &kp LG(PLUS)  &none
                                                 &trans      &trans            &kp LS(ENTER)    &trans     &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bt BT_CLR  &none  &none  &none   &ag R   &none           &ag Y   &none                  &none    &kp C_POWER  &ag P     &bt BT_NXT
&trans      &ag A  &ag S  &trans  &ag F   &htpaste 0 G    &trans  &none                  &none    &tdup        &none     &none
&trans      &ag Z  &ag X  &ag C   &ag V   &htcopy 0 B     &ag N   &trans                 &tdleft  &tddown      &tdright  &tog 3
                          &trans  &trans  &trans          &trans  &mt LG(BSPC) LA(BSPC)  &trans
            >;

            label = "Adjust";
        };
    };
};
