/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LWR     1
#define RAS     2
#define ADJ     3
#define NUM     4

#define AG(keycode) &ag LG(keycode) keycode     // AutoGUI Macro

#define MEH     &kp LC(LS(LALT))
#define HYPER   &kp LC(LS(LA(LGUI)))

&mt { tapping-term-ms = <250>; };

/ {
    behaviors {
        tdques: td_ques {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&htslash 0 SLASH>, <&kp QUESTION>, <&wth>;
        };

        tdquote: td_quote {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp DQT>;
        };

        tdcolon: td_colon {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp SEMICOLON>, <&kp COLON>;
        };

        tdleft: td_left {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mt LA(LEFT) LEFT>, <&ag LEFT>;

            tapping-term-ms = <250>;
        };

        ag_ht: ag_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "AG_HT";
            bindings = <&gui>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        tdright: td_right_arrow {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mt LA(RIGHT_ARROW) RIGHT>, <&ag RIGHT_ARROW>;

            tapping-term-ms = <250>;
        };

        tdup: td_up_arrow {
            compatible = "zmk,behavior-tap-dance";
            label = "TDU";
            #binding-cells = <0>;
            bindings = <&mt PAGE_UP UP_ARROW>, <&ag UP_ARROW>;

            tapping-term-ms = <250>;
        };

        tddown: td_down_arrow {
            compatible = "zmk,behavior-tap-dance";
            label = "TDDOW";
            #binding-cells = <0>;
            bindings = <&mt PAGE_DOWN DOWN_ARROW>, <&ag DOWN_ARROW>;

            tapping-term-ms = <250>;
        };

        htslash: htslash {
            compatible = "zmk,behavior-hold-tap";
            label = "HTSLASH";
            bindings = <&interrobang>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        tdsquare: tdsquare {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&ag LEFT_BRACKET>, <&kp LEFT_BRACE>;

            label = "TDSQUARE";
        };

        tdcurly: tdcurly {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&ag RIGHT_BRACKET>, <&kp RIGHT_BRACE>;

            label = "TDCURLY";
        };

        hyper: hyper {
            compatible = "zmk,behavior-tap-dance";
            label = "HYPER";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings =
                <&mt LS(LG(LA(LCTRL))) ESCAPE>,
                <&mt C_AL_LOCK C_POWER>,
                <&htsos LC(C_POWER) 0>;
        };

        htsos: htsos {
            compatible = "zmk,behavior-hold-tap";
            label = "HTSOS";
            bindings = <&kp>, <&sos>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        mo_tog: mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };

        ht_emdash: ht_emdash {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_EMDASH";
            bindings = <&kp>, <&doubledash>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
        };

        td_dash: td_dash {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DASH";
            #binding-cells = <0>;
            bindings =
                <&mt UNDER MINUS>,
                <&ht_emdash LS(LA(MINUS)) 0>,
                <&ht_endash LA(MINUS) 0>;
        };

        ht_endash: ht_endash {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_ENDASH";
            bindings = <&kp>, <&tripledash>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
        };

        td_4key: td_4key {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_4KEY";
            #binding-cells = <0>;
            bindings = <&mt F4 LA(NUMBER_3)>, <&kp DOLLAR>;
        };

        td_5key: td_5key {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_5KEY";
            #binding-cells = <0>;
            bindings = <&mt F5 PERCENT>, <&kp LA(NUMBER_2)>;
        };

        td_3key: td_3key {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_3KEY";
            #binding-cells = <0>;
            bindings = <&mt F3 HASH>, <&kp LA(LS(N2))>;
        };

        morph_lt_bspc: morph_lt_bspc {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_LT_BSPC";
            bindings = <&lt 2 BACKSPACE>, <&kp LC(D)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morph_delete: morph_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_DELETE";
            bindings =
                <&mt LG(BACKSPACE) LA(BACKSPACE)>,
                <&ht_fwd_delete LC(K) 0>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        ht_fwd_delete: ht_fwd_delete {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_FWD_DELETE";
            bindings = <&fwd_del_line>, <&fwd_del_word>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };

        morph_vol_up: morph_vol_up {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_VOL_UP";
            bindings = <&kp C_VOLUME_UP>, <&kp C_NEXT>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_RCTL|MOD_LGUI|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morph_vol_down: morph_vol_down {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_VOL_DOWN";
            bindings = <&kp C_VOLUME_DOWN>, <&kp C_PREVIOUS>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_RCTL|MOD_LGUI|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morph_bt1: morph_bt1 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_BT1";
            bindings = <&none>, <&bt BT_SEL 0>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };

        morph_bt2: morph_bt2 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_BT2";
            bindings = <&none>, <&bt BT_SEL 1>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morph_bt3: morph_bt3 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_BT3";
            bindings = <&none>, <&bt BT_SEL 2>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morph_bt4: morph_bt4 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_BT4";
            bindings = <&none>, <&bt BT_SEL 3>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morph_bt5: morph_bt5 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_BT5";
            bindings = <&none>, <&bt BT_SEL 4>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morph_bootload: morph_bootload {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_BOOTLOAD";
            bindings = <&none>, <&bootloader>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morph_bt_clr: morph_bt_clr {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_BT_CLR";
            bindings = <&none>, <&bt BT_CLR>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };
    };
};

/ {
    macros {
        ag: ag {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &ag_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &ag_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AG";
        };

        gui: cmg {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LGUI>;

            label = "CMG";
        };

        interrobang: interrobang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp QUESTION &kp EXCLAMATION>,
                <&macro_release>;

            label = "interrobang";
        };

        blah: blah {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LS(LCTRL))>, <&macro_release>;

            label = "BLAH";
        };

        wth: wth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp QUESTION &kp QUESTION &kp QUESTION>,
                <&macro_release>;

            label = "WTH";
        };

        sos: sos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LG(ESCAPE))>, <&macro_release>;

            label = "SOS";
        };

        powerup: powerup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(C_POWER)>, <&macro_release>;

            label = "POWERUP";
        };

        doubledash: doubledash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp MINUS &kp MINUS>, <&macro_release>;

            label = "DOUBLEDASH";
        };

        tripledash: tripledash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp MINUS &kp MINUS &kp MINUS>,
                <&macro_release>;

            label = "TRIPLEDASH";
        };

        fwd_del_line: fwd_del_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LS(LG(RIGHT)) &kp BACKSPACE>,
                <&macro_release>;

            label = "FWD_DEL_LINE";
        };

        fwd_del_word: fwd_del_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LS(LA(RIGHT)) &kp BACKSPACE>,
                <&macro_release>;

            label = "FWD_DEL_WORD";
        };
    };

    combos {
        compatible = "zmk,combos";

        capwordz {
            bindings = <&caps_word>;
            key-positions = <25 26>;
        };

        caplockz {
            bindings = <&kp CAPSLOCK>;
            key-positions = <25 34>;
        };

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <29 5>;
            layers = <4>;
        };

        bootload {
            bindings = <&bootloader>;
            key-positions = <29 21>;
            layers = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&hyper                 &ag Q  &ag W  &ag E     &ag R           &ag T                   &ag Y        &ag U          &ag I        &ag O    &ag P     &mo_tog 4 4
&mt LS(LA(LCTRL)) TAB  &ag A  &ag S  &ag D     &ag F           &ag G                   &ag H        &ag J          &ag K        &ag L    &tdquote  &tdcolon
&mt LCTRL LC(TAB)      &ag Z  &ag X  &ag C     &ag V           &ag B                   &ag N        &ag M          &ag COMMA    &ag DOT  &tdques   &sk LGUI
                                     &sk LALT  &morph_lt_bspc  &mt LEFT_SHIFT ENTER    &lt 1 SPACE  &morph_delete  &mo_tog 3 3
            >;

            label = "Base";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans  &ag N1  &ag N2  &ag N3  &ag N4  &ag N5    &ag N6  &ag N7     &ag N8     &ag N9                     &ag N0    &trans
&trans  &none   &none   &none   &none   &none     &none   &tdsquare  &td_dash   &mt LG(UP_ARROW) UP_ARROW  &kp PLUS  &kp BACKSLASH
&trans  &none   &none   &none   &none   &none     &none   &tdcurly   &ag MINUS  &mt LG(DOWN) PERIOD        &ag PLUS  &trans
                        &trans  &trans  &trans    &trans  &trans     &trans
            >;

            label = "Lower";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&trans  &mt F1 EXCL   &mt F2 AT  &td_3key  &td_4key  &td_5key         &mt F6 CARET  &mt F7 AMPS  &mt F8 ASTERISK  &mt F9 LPAR       &mt F10 RPAR   &trans
&trans  &none         &none      &none     &none     &none            &trans        &trans       &trans           &none             &trans         &kp BACKSLASH
&trans  &kp CAPSLOCK  &none      &none     &none     &none            &trans        &trans       &morph_vol_down  &kp C_PLAY_PAUSE  &morph_vol_up  &trans
                                 &trans    &trans    &kp LS(ENTER)    &trans        &trans       &trans
            >;

            label = "Raise";
        };

        adjust_layer {
            display-name = "Adjust";
            bindings = <
&trans  &none  &none  &none   &ag R   &none                   &ag Y   &studio_unlock  &none    &none    &none     &trans
&trans  &ag A  &ag S  &ag D   &ag F   &ag G                   &trans  &trans          &none    &tdup    &none     &none
&trans  &ag Z  &ag X  &ag C   &ag V   &ag B                   &ag N   &trans          &tdleft  &tddown  &tdright  &trans
                      &trans  &trans  &mt LEFT_SHIFT ENTER    &trans  &trans          &trans
            >;

            label = "Adjust";
        };

        numpad_layer {
            bindings = <
&none  &morph_bt1  &morph_bt2  &morph_bt3  &morph_bt4  &morph_bt5    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_ASTERISK  &none          &trans
&none  &none       &none       &none       &none       &none         &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS         &none          &none
&none  &none       &none       &none       &none       &none         &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_SUBTRACT  &kp KP_DIVIDE  &trans
                               &none       &trans      &trans        &kp KP_EQUAL     &trans           &kp KP_NUMBER_0
            >;

            label = "Numpad";
        };
    };
};
